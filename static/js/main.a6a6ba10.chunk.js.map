{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","sortField","setSortField","visibleGoods","goods","sortRule","preperedGoods","includes","reversedArr","sort","good1","good2","localeCompare","length","prepareGoods","SORT_BY_NAME","SORT_BY_LENGTH","SORT_REVERSE","handleSort","sortParameter","prevSort","resetButton","type","className","onClick","handleClasses","property","cn","prevState","haveReverse","split","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6CK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EA5CR,SAAsBC,EAAOC,GAC3B,IAAMC,EAAa,YAAOF,GAE1B,GAAIC,GAAYA,EAASE,SAAS,WAAY,CAC5C,IAAMC,EAAc,YAAIJ,GAAOK,MAAK,kBAAO,KAiB3C,OAfAD,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQN,GACN,IAAK,UACH,OAAO,EACT,IAAK,qBACH,OAAOM,EAAMC,cAAcF,GAC7B,IAAK,iBACH,OAAOA,EAAMH,SAAS,MACjB,EACDI,EAAME,OAASH,EAAMG,OAC3B,QACE,OAAO,MAINL,EAkBT,OAfIH,GACFC,EAAcG,MAAK,SAACC,EAAOC,GACzB,OAAQN,GACN,IAAK,aACH,OAAOK,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMH,SAAS,KAClB,EACAG,EAAMG,OAASF,EAAME,OAC3B,QACE,OAAO,MAKRP,EAKcQ,CAAahB,EAAiBG,GAE7Cc,EAAe,aACfC,EAAiB,SACjBC,EAAe,UAkBfC,EAAa,SAAAC,GAAa,OAAIjB,GAAa,SAAAkB,GAAQ,OACvDA,EAASb,SAASU,GAAlB,UACOE,EADP,YACwBF,GACpBE,MAEAE,EAAcpB,GAClB,wBACEqB,KAAK,SACLC,UAAU,4BACVC,QAAS,kBAAMtB,EAAa,KAH9B,mBASIuB,EAAgB,SAAAC,GAAQ,MAAK,CACjC,YAAazB,EAAUM,SAASmB,KAGlC,OACE,sBAAKH,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWI,IAAG,iBAAkBF,EAAcV,IAC9CS,QAAS,kBAAMN,EAAWH,IAH5B,iCAQA,wBACEO,KAAK,SACLC,UAAWI,IAAG,oBAAqBF,EAAcT,IACjDQ,QAAS,kBAAMN,EAAWF,IAH5B,4BAQA,wBACEM,KAAK,SACLE,QAAS,kBAxDWtB,GAAa,SAAC0B,GACxC,GAAkB,KAAdA,EACF,OAAOX,EAGT,IAAMY,EAAcD,EAAUrB,SAAS,WAEvC,OAAIsB,GAA+C,IAAhCD,EAAUE,MAAM,KAAKjB,OAC/B,GAGFgB,EACHD,EAAUE,MAAM,KAAK,GADP,UAEX7B,EAFW,YAEEgB,OA4CdM,UAAWI,IAAG,oBAAqBF,EAAcR,IAHnD,qBAQCI,KAIH,6BACGlB,EAAa4B,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCvIjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a6a6ba10.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction prepareGoods(goods, sortRule) {\n  const preperedGoods = [...goods];\n\n  if (sortRule && sortRule.includes('reverse')) {\n    const reversedArr = [...goods].sort(() => -1);\n\n    reversedArr.sort((good1, good2) => {\n      switch (sortRule) {\n        case 'reverse':\n          return 1;\n        case 'alphabetic reverse':\n          return good2.localeCompare(good1);\n        case 'length reverse':\n          return good1.includes(' ')\n            ? -1\n            : good2.length - good1.length;\n        default:\n          return 0;\n      }\n    });\n\n    return reversedArr;\n  }\n\n  if (sortRule) {\n    preperedGoods.sort((good1, good2) => {\n      switch (sortRule) {\n        case 'alphabetic':\n          return good1.localeCompare(good2);\n        case 'length':\n          return good1.includes(' ')\n            ? 1\n            : good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return preperedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const visibleGoods = prepareGoods(goodsFromServer, sortField);\n\n  const SORT_BY_NAME = 'alphabetic';\n  const SORT_BY_LENGTH = 'length';\n  const SORT_REVERSE = 'reverse';\n\n  const toggleReverse = () => setSortField((prevState) => {\n    if (prevState === '') {\n      return SORT_REVERSE;\n    }\n\n    const haveReverse = prevState.includes('reverse');\n\n    if (haveReverse && prevState.split(' ').length === 1) {\n      return '';\n    }\n\n    return haveReverse\n      ? prevState.split(' ')[0]\n      : `${sortField} ${SORT_REVERSE}`;\n  });\n\n  const handleSort = sortParameter => setSortField(prevSort => (\n    prevSort.includes(SORT_REVERSE)\n      ? `${sortParameter} ${SORT_REVERSE}`\n      : sortParameter));\n\n  const resetButton = sortField && (\n    <button\n      type=\"button\"\n      className=\"button is-danger is-light\"\n      onClick={() => setSortField('')}\n    >\n      Reset\n    </button>\n  );\n\n  const handleClasses = property => ({\n    'is-light': !sortField.includes(property),\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', handleClasses(SORT_BY_NAME))}\n          onClick={() => handleSort(SORT_BY_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', handleClasses(SORT_BY_LENGTH))}\n          onClick={() => handleSort(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => toggleReverse()}\n          className={cn('button is-warning', handleClasses(SORT_REVERSE))}\n        >\n          Reverse\n        </button>\n\n        {resetButton}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}